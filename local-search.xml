<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于fluid主题的hexo博客搭建</title>
    <link href="/2023/05/28/%E5%9F%BA%E4%BA%8Efluid%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/05/28/%E5%9F%BA%E4%BA%8Efluid%E4%B8%BB%E9%A2%98%E7%9A%84hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h3><p>周末儿子跟同学出去玩了，闲着无聊花了一天时间，搭建了一个hexo个人网站，使用的是了fluid主题，感谢作者的无私付出（<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid-dev&#x2F;hexo-theme-fluid: 一款 Material Design 风格的 Hexo 主题)</a>）。</p><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p><a href="https://hexo.io/zh-cn/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo支持 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h4 id="1-1-环境准备"><a href="#1-1-环境准备" class="headerlink" title="1.1 环境准备"></a>1.1 环境准备</h4><p>安装Hexo其实非常简单，但是需要先在本地电脑中安装好下面几个软件，另外我还安装了Visual Studio Code及Typora，推荐Typora+picgo作为文章写作软件，支持自动上传图片到图床。</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li><li><a href="https://www.npmjs.com/">nmp</a></li><li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li><li><a href="https://typora.io/">Typora</a></li></ul><h4 id="1-2安装"><a href="#1-2安装" class="headerlink" title="1.2安装"></a>1.2安装</h4><p>安装好前三个软件后，即可使用npm安装Hexo了，打开一个PowerShell窗口，执行下面命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></td></tr></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><code>npx hexo</code></li><li>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用： <code>hexo</code></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27;</span> &gt;&gt; ~/.profile<br></code></pre></td></tr></table></figure><h4 id="1-3升级"><a href="#1-3升级" class="headerlink" title="1.3升级"></a>1.3升级</h4><p>如果后期需要升级的话，进入博客的目录，先检查更新:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">E:\Blog\hexo&gt; npm outdated<br>Package  Current  Wanted     Latest  Location           Depended by<br>hexo       6.3.0   6.3.0  7.0.0-rc1  node_modules/hexo  hexo<br></code></pre></td></tr></table></figure><p>修改 <code>package.json</code> 文件，基于 <code>Latest</code> 列内容更新版本号，然后更新并检查版本号：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install <span class="hljs-literal">--save</span><br></code></pre></td></tr></table></figure><h3 id="2-建站"><a href="#2-建站" class="headerlink" title="2.建站"></a>2.建站</h3><h4 id="2-1初始化目录"><a href="#2-1初始化目录" class="headerlink" title="2.1初始化目录"></a>2.1初始化目录</h4><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo init &lt;目标文件夹&gt;<br><span class="hljs-built_in">cd</span> &lt;目标文件夹&gt;<br>npm install <br></code></pre></td></tr></table></figure><h4 id="2-2启动网页服务"><a href="#2-2启动网页服务" class="headerlink" title="2.2启动网页服务"></a>2.2启动网页服务</h4><p>等初始化执行完成后，通过<code>hexo s</code>命令即可在本地启动博客站点：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">&gt;hexo s<br>INFO  <span class="hljs-built_in">Start</span> processing<br>INFO  Hexo is running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C to stop.<br></code></pre></td></tr></table></figure><p>浏览器访问<a href="http://localhost:4000就可以看到下面这页面了：">http://localhost:4000就可以看到下面这页面了：</a></p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305281920328.png"></p><h3 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="3.更换主题"></a>3.更换主题</h3><h4 id="3-1安装主题"><a href="#3-1安装主题" class="headerlink" title="3.1安装主题"></a>3.1安装主题</h4><p><strong>方式一</strong></p><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml (opens new window)</a>内容复制过去。</p><p><strong>方式二</strong></p><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本 (opens new window)</a>解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h4 id="3-2指定主题"><a href="#3-2指定主题" class="headerlink" title="3.2指定主题"></a>3.2指定主题</h4><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h4 id="3-3创建「关于页」"><a href="#3-3创建「关于页」" class="headerlink" title="3.3创建「关于页」"></a>3.3创建「关于页」</h4><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><blockquote><p><em><strong>注意</strong></em></p><p><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p></blockquote><p>完了执行下面两条命令，就可以看到新主题的样式了：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo clean<br>hexo s<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305281955091.png"></p><h4 id="3-4更新主题"><a href="#3-4更新主题" class="headerlink" title="3.4更新主题"></a>3.4更新主题</h4><p><strong>方式一</strong></p><blockquote><p>适用于通过 Npm 安装主题。</p></blockquote><p>在博客目录下执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm update --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p><strong>方式二</strong></p><blockquote><p>适用于通过 Release 压缩包安装主题，且没有自行修改任何代码的情况。</p></blockquote><ol><li>先将原文件夹重命名为别的名称，例如 <code>fluid-bkp</code>，用于升级失败进行回退；</li><li>按照安装步骤，重新下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">release (opens new window)</a>并解压重命名为 <code>fluid</code>；</li><li>如果某些配置发生了变化（改名或弃用），release 的说明里会特别提示，同步修改原配置文件即可。</li></ol><p><strong>方式三</strong></p><blockquote><p>适用于自定义了一些代码，或想体验其他分支的情况，以 dev 分支为例。</p></blockquote><ol><li>确定自己的 fluid 目录已经开启 git，并且所有改动都已 commit；</li><li>把 fluid 仓库的 develop 分支拉取到自己当前的分支上（也可新建一个分支再拉取）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull https://github.com/fluid-dev/hexo-theme-fluid.git develop<br></code></pre></td></tr></table></figure><ol start="3"><li>解决代码冲突，保留自己修改的部分（如何解决冲突可自行搜索）</li></ol><h4 id="3-5更多主题配置"><a href="#3-5更多主题配置" class="headerlink" title="3.5更多主题配置"></a>3.5更多主题配置</h4><p>更多的主题配置请参考官方配置指南：</p><p><a href="https://hexo.fluid-dev.com/docs/guide/">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></p><h3 id="4-部署到Github"><a href="#4-部署到Github" class="headerlink" title="4.部署到Github"></a>4.部署到Github</h3><p>通过 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a> 插件可以实现一键将博客部署到github提供的 pages 服务。</p><h4 id="4-1新建存储库"><a href="#4-1新建存储库" class="headerlink" title="4.1新建存储库"></a>4.1新建存储库</h4><p>建立名为 <code>&lt;repository的名字&gt;.github.io</code> 的储存库，这样你的博客网址为 <code>&lt;你的 GitHub 用户名&gt;.github.io</code>，例如下面这样：</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282020235.png"></p><h4 id="4-1安装hexo-deployer-git"><a href="#4-1安装hexo-deployer-git" class="headerlink" title="4.1安装hexo-deployer-git"></a>4.1安装hexo-deployer-git</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install hexo<span class="hljs-literal">-deployer-git</span> <br></code></pre></td></tr></table></figure><h4 id="4-2修改-config-yml文件"><a href="#4-2修改-config-yml文件" class="headerlink" title="4.2修改_config.yml文件"></a>4.2修改<code>_config.yml</code>文件</h4><p>在配置文件中追加下面的内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/conscloud/conscloud.github.io</span><br>  <span class="hljs-comment"># example, https://github.com/hexojs/hexojs.github.io</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br>  <span class="hljs-attr">ignore_hidden:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h4 id="4-3部署发布"><a href="#4-3部署发布" class="headerlink" title="4.3部署发布"></a>4.3部署发布</h4><p>Commit 并 push 到默认分支上，当部署完成后，在 <code>gh-pages</code> 分支可以找到生成的网页，并在 GitHub 储存库中，前往 <code>Settings &gt; Pages &gt; Source</code>，并将 branch 改为 <code>gh-pages</code>。</p><p>部署执行下面的命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo clean &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>前往 <code>https://&lt;你的 GitHub 用户名&gt;.github.io/</code> 查看网站。</p><h3 id="5-部署到vercel"><a href="#5-部署到vercel" class="headerlink" title="5.部署到vercel"></a>5.部署到vercel</h3><p>部署到github一个是速度不够快，另一个是国内的网络环境有时可能无法访问，推荐部署到<a href="https://vercel.com/">Vercel</a>,配合自定义域名，可以提高访问速度。</p><h4 id="5-1新建工程"><a href="#5-1新建工程" class="headerlink" title="5.1新建工程"></a>5.1新建工程</h4><p>首先先注册一个vercel账号后，在页面中点击<code>New Project</code>，创建工程。</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282033030.png"></p><p>然后通过绑定的 <code>github</code> 或者导入需要部署的项目。</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282036266.png"></p><p>因为导入的项目是打包好的静态页，<code>FRAMEWORK PRESET</code> 选择 <code>Other</code> 。</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282036659.png"></p><p>点击 <code>deployed</code> 进行部署，如果部署失败可以查看报错信息是不是上一步的某些选项没有覆盖。部署成功后会进入如图所示的界面：</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282038893.png"></p><h4 id="5-2自定义域名"><a href="#5-2自定义域名" class="headerlink" title="5.2自定义域名"></a>5.2自定义域名</h4><p><strong>域名可以购买或者去<a href="https://www.freenom.com/zh/index.html?lang=zh">Freenom</a>申请免费的域名，但是Freenom域名听说有可能存在被收回的风险。</strong></p><ul><li>默认情况下部署成功后 <code>vercel</code> 会给你生成一个默认的域名，如果想要修改成自己的域名可将域名名称修改成自己的。</li><li>当选择修改成自己的域名名称后，<code>vercel</code> 会检查域名指向的 <code>DNS</code> 对不对，如果不对的话会提示你域名的 DNS 应该如何配置，按照 <code>vercel</code> 提示的 <code>DNS</code> 信息</li></ul><p>在自己的域名的 <code>DNS</code> 配置中进行配置，如图在 setting 中配置自定义域名：</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282042641.png"></p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282046481.png"></p><p>待生效后，就可以用自定义的域名访问了。</p><h4 id="5-4修改Vrecel服务器区域"><a href="#5-4修改Vrecel服务器区域" class="headerlink" title="5.4修改Vrecel服务器区域"></a>5.4修改Vrecel服务器区域</h4><p>在Settings-Functions中修改区域为香港。</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282049763.png"></p><p>我用的是freenom的免费域名，通过cloudfare管理，服务器区域修改为香港后，在晚上高峰期测试的延迟情况：</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305282051918.png"></p><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h3><p>好像就是这样就完事了。</p><p>哦！感谢下列文章作者：</p><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><p><a href="https://hexo.fluid-dev.com/docs/guide/">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></p><p><a href="https://blog.17lai.site/posts/40300608/#!">三万字教程]基于Hexo的matery主题搭建博客并深度优化一站式完全教程 | 夜法之书 (17lai.site)</a></p><p><a href="https://hexo.fluid-dev.com/posts/hexo-vercel/#">Vercel部署高级用法教程 - Hexo Theme Fluid (fluid-dev.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>HEXO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>群晖无法启用防火墙问题修复</title>
    <link href="/2023/05/28/%E7%BE%A4%E6%99%96%E6%97%A0%E6%B3%95%E5%90%AF%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/"/>
    <url>/2023/05/28/%E7%BE%A4%E6%99%96%E6%97%A0%E6%B3%95%E5%90%AF%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305241504372.png"></p><p><strong>现象</strong>：系统版本DSM7.1，当选择启用防火墙时，编辑规则会报“无法加载配置文件数据”，也无法在防火墙配置规则中进行下拉选择。</p><h3 id="启用SSH服务登录到群晖后台"><a href="#启用SSH服务登录到群晖后台" class="headerlink" title="启用SSH服务登录到群晖后台"></a>启用SSH服务登录到群晖后台</h3><p>如果不知道如何开启SSH服务，请参考：<a href="https://www.okko.tk/posts/%E7%BE%A4%E6%99%96%E5%BC%80%E5%90%AFSSH%E6%9C%8D%E5%8A%A1%E5%8F%8A%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95">群晖开启SSH及免密码登录配置 - ZhJy的随笔</a></p><h3 id="修复防火墙配置文件"><a href="#修复防火墙配置文件" class="headerlink" title="修复防火墙配置文件"></a>修复防火墙配置文件</h3><ol><li>分别查看<code>/usr/syno/etc/firewall.d/</code>及<code>/usr/syno/etc.defaults/firewall.d</code>两个目录下是否至少有三个json文件，我这分别为1.json、2.json及firewall_settings.json三个文件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305271047706.png"></p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305271048888.png"></p><ol><li>使用cat命令分别查看1.json及2.json文件内容是否为空，或者json格式不正确，我这里是在&#x2F;usr&#x2F;syno&#x2F;etc&#x2F;firewall.d&#x2F;这个目录下的两个数字开头的文件内容为空，而etc.defaults&#x2F;firewall.d&#x2F;下面同名的文件是有内容的。</li><li>将&#x2F;usr&#x2F;syno&#x2F;etc.defaults&#x2F;firewall.d&#x2F;下的1.json、2.json复制到&#x2F;usr&#x2F;syno&#x2F;etc&#x2F;firewall.d&#x2F;目录下。</li><li>回到页面验证，现在已经可以开户防火墙，并配置相关规则了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305271055709.png" alt="|big"></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>That is all!</p>]]></content>
    
    
    <categories>
      
      <category>群晖</category>
      
    </categories>
    
    
    <tags>
      
      <tag>群晖</tag>
      
      <tag>DSM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>群晖开启SSH及免密码登录配置</title>
    <link href="/2023/05/28/%E7%BE%A4%E6%99%96%E5%BC%80%E5%90%AFSSH%E5%8F%8A%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/05/28/%E7%BE%A4%E6%99%96%E5%BC%80%E5%90%AFSSH%E5%8F%8A%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305270954319.png"></p><p>群晖开启root账户免密登录与linux服务器的操作大致相同。 </p><p>我的群晖DSM版本是7.1.1</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305270925295.png"></p><h3 id="1-开启SSH服务"><a href="#1-开启SSH服务" class="headerlink" title="1.开启SSH服务"></a>1.开启SSH服务</h3><p>群晖从7开始默认关闭了“admin”账户，并禁用最大权限的系统账户“root”登录网页控制台。</p><p>先使用群晖安装时建立的普通管理员账户（加入了administrators用户组的用户）登录web控制台后，依次点击“控制面板”-“终端机和SNMP”，勾选“启用SSH功能”，再点击右下角的“应用”按钮即完成开启SSH服务。<strong>建议修改默认端口号。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305270928199.png"></p><h3 id="2-允许ROOT账号登录"><a href="#2-允许ROOT账号登录" class="headerlink" title="2.允许ROOT账号登录"></a>2.允许ROOT账号登录</h3><p>通过普通管理员账户进行ssh登录，输入sudo - i 回车后再次输入管理员密码，就能切换到root账户。</p><p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305270932547.png"></p><p>给root账户设置密码,其中xxx为你想要设置的密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">synouser --setpw root xxx<br></code></pre></td></tr></table></figure><p>修改sshd_config文件的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">PermitRootLogin <span class="hljs-built_in">yes</span><span class="hljs-comment">#允许root登录</span><br>PasswordAuthentication <span class="hljs-built_in">yes</span>          <span class="hljs-comment">#开启密码认证</span><br>ChallengeResponseAuthentication no<br>UsePAM <span class="hljs-built_in">yes</span>    <span class="hljs-comment">#开户密码认证</span><br></code></pre></td></tr></table></figure><p>修改完后，别忘记保存。</p><h3 id="3-开启密钥登录"><a href="#3-开启密钥登录" class="headerlink" title="3.开启密钥登录"></a>3.开启密钥登录</h3><p>确认在root用户下，输入“ssh-keygen”命令创建密钥，id_rsa是新生成的私钥，id_rsa.pub是对应的公钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -b 2048 -C &quot;root_rsa_key&quot;<br></code></pre></td></tr></table></figure><p>将id_rsa.pub文件内容追加到“&#x2F;root&#x2F;.ssh&#x2F;authorized_keys”文件中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><p><em>注意authorized_keys权限至少是root账户有rw（否则执行以下2条命令“chmod 700 ~&#x2F;.ssh”、“ chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys”）</em></p><p>将id_rsa文件复制到本地，重启ssh服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">synosystemctl reload sshd<br>synosystemctl restart sshd<br></code></pre></td></tr></table></figure><p>在本地就可以通过工具（如xshell等）免密码连接到群晖了。</p><p>最后可以修改sshd_config文件，禁止使用密码认证登录，提高安全性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PasswordAuthentication no          <span class="hljs-comment">#关闭密码认证</span><br></code></pre></td></tr></table></figure><p><strong>最后，如果修改sshd_config文件导致ssh功能无法使用而其他功能正常，群晖可以正常登录网页控制台，可以开启telnet,把错误的sshd_config改回去！</strong></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p><strong>群晖353条syno命令:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br></pre></td><td class="code"><pre><code class="hljs bash">syno-abuser-blocklist-checker<br>syno-dump-core.sh<br>syno-init-disk-health-db<br>syno-letsencrypt<br>syno8021Xtool<br>synoRTCTime<br>syno_adv_test<br>syno_bios_bootperf_record<br>syno_disk_config_check<br>syno_disk_ctl<br>syno_disk_data_collector<br>syno_disk_db_update<br>syno_disk_dsl<br>syno_disk_dump<br>syno_disk_firm_status_update<br>syno_disk_health_predict<br>syno_disk_health_record<br>syno_disk_latency_collector<br>syno_disk_log_convert<br>syno_disk_log_import_from_xml<br>syno_disk_performance_cache_update<br>syno_disk_performance_delete_record<br>syno_disk_performance_monitor<br>syno_disk_schedule_test<br>syno_disk_smart_mail_send<br>syno_disk_sysfs_get<br>syno_disk_sysfs_set<br>syno_disk_test_log_import_from_xml<br>syno_disk_test_scheduler_set<br>syno_disk_testlog_convert<br>syno_disk_wcache_config_init<br>syno_disk_wdda<br>syno_drive_bundle<br>syno_ew_check.sh<br>syno_expansion<br>syno_fan_debug<br>syno_hdd_util<br>syno_hibernation_debug<br>syno_hook_trgr<br>syno_hw_video_transcoding.sh<br>syno_ip_conflict_detect<br>syno_iptables_common<br>syno_led_brightness<br>syno_led_mask_on<br>syno_mem_check<br>syno_mem_single_channel_action<br>syno_mib_disk_mapping<br>syno_mib_disk_tool<br>syno_microp_control<br>syno_predict_disk_health<br>syno_pstore_collect<br>syno_scemd_connector<br>syno_sched_poweroff<br>syno_smart_result_collect<br>syno_smart_test<br>syno_spectre_meltdown_tool<br>syno_ssd_trim<br>syno_ssd_trim_schedule<br>syno_storage_bkgrd_task<br>syno_swap_ctl<br>syno_syslog_check_ctl<br>syno_system_dump<br>syno_update_disk_log_information<br>syno_user_info<br>syno_volume_analyze<br>synoabnormalloginmail<br>synoabnormalloginnotify<br>synoacltool<br>synoafp<br>synoagentregisterd<br>synoagentregistertool<br>synoappbkp<br>synoappconfigcache<br>synoappnotify<br>synoapppriv_updater<br>synoarchive<br>synoarchivetool<br>synoauth<br>synoautoblock<br>synoautonano<br>synobackgroundtask<br>synobackup<br>synobackupd<br>synobandwidth<br>synobios_uninit<br>synobootseq<br>synobootupcheck<br>synobtrfssnap<br>synobtrfssnapusage<br>synocacheadvisor<br>synocacheadvisord<br>synocacheclient<br>synocachepinfiled<br>synocachepinfiletool<br>synocachepinfiletool-status<br>synocachepinfiletool.sh<br>synocfgen<br>synocgid<br>synocgitool<br>synocheckgroup<br>synocheckhotspare<br>synocheckinfo<br>synocheckiscsitrg<br>synochecknetworkcfg<br>synocheckshare<br>synocheckuser<br>synocleaner<br>synocloudserviceauth<br>synocmsclient<br>synocodectool<br>synoconfbkp<br>synoconfd<br>synocontentextract<br>synocontentextractd<br>synocontentsearchutils<br>synocopy<br>synocredential<br>synocrond<br>synocrtchecksum<br>synocrtregister<br>synocrtunregister<br>synocsp<br>synodatacollect<br>synodataverifier<br>synodate<br>synodbudconfig<br>synodbudd<br>synodbudgetinfo<br>synodbudinfo<br>synodbudisrunning<br>synodbudupdate<br>synodbudvcdiff<br>synodbudvolume<br>synodctest<br>synodd<br>synoddnsinfo<br>synodisk<br>synodiskdatacollect<br>synodiskfind<br>synodisklatencyd<br>synodiskmanagertool<br>synodiskpathparse<br>synodiskport<br>synodiskstat<br>synodiskwddad<br>synodsdefault<br>synodsinfo<br>synodsmloginhealthcheck<br>synodsmnotify<br>synoethinfo<br>synoexternal<br>synoextractjep<br>synofanconfig<br>synofilehandle<br>synofilehandlecleancache<br>synofileutil<br>synofirewall<br>synofirewallUpdater<br>synoflashcache<br>synoflashcachechecknotifymissing<br>synoflashcacheshareapplytool<br>synoflvconv<br>synofsbdctl<br>synofstool<br>synoftpchecker<br>synogear<br>synogetkeyvalue<br>synogetstate.sh<br>synogpoclientd<br>synogrinst<br>synogroup<br>synohacore<br>synohtmlhandler<br>synohwctl<br>synoindex<br>synoindex-bin-scheduler<br>synoindex-bin-sdk-hook-db-tool<br>synoindex_mgr<br>synoindex_package.sh<br>synoindexd<br>synoindexnotifyd<br>synoindexplugind<br>synoindexscand<br>synoindexworkerd<br>synoinsid<br>synoiscsiep<br>synoiscsitop<br>synoiscsiwebapi<br>synokerneltz<br>synolanstatus<br>synoldapclient<br>synoldapclientd<br>synolegalnotifier<br>synolog-linker<br>synologaccd<br>synologand<br>synologanutil<br>synologconfgen<br>synologconvert<br>synologrotated<br>synologset<br>synologset1<br>synomediaparser<br>synomediaparserd<br>synomibclient-event<br>synomibtool<br>synomigratewallpaper<br>synomkflv<br>synomkflvd<br>synomkthumb<br>synomkthumbd<br>synomoduletool<br>synomount<br>synomustache<br>synomyds<br>synonclient_send<br>synonet<br>synonetd<br>synonetdtool<br>synoneteventd<br>synonetseqadj<br>synonfs<br>synonfstest<br>synonfstop<br>synonode<br>synonotify<br>synonotifyconvert<br>synonotifydbtransfer<br>synonvme<br>synootp<br>synoovstool<br>synopartition<br>synopasswordmail<br>synopayment<br>synoperfeventd<br>synoperformancediagnose<br>synopersonalupdater<br>synopftest<br>synopingpong<br>synopkg<br>synopkgctl<br>synopkghelper<br>synopkicompatsync<br>synoplatform<br>synoportforward<br>synopostgres<br>synopoweroff<br>synopppoe<br>synopreferencedir<br>synoprint<br>synopsql<br>synopyntlmd<br>synoquota<br>synoraid5stat<br>synoraidtool<br>synorbdctl<br>synorecycle<br>synorelayd<br>synorenewdefaultcert<br>synoretainer<br>synoretentionconf<br>synoretentiontest<br>synoretentiontestutil.sh<br>synorollinggroupid<br>synorouterportfwd<br>synoroutertool<br>synorsyncdtool<br>synosavetime<br>synoscgi<br>synoscgi-socket-get-memory.js<br>synoscgi________________________________________________________<br>synoscgi_socket.js<br>synoschedmulti<br>synoschedmultirun<br>synoschedtask<br>synoschedtool<br>synoscheduled<br>synosdutils<br>synosearch<br>synosearchagent<br>synoselfcheck<br>synoselfcheck-min<br>synoservicemigrate<br>synosetkeyvalue<br>synosetnoatime<br>synoshare<br>synosharequota<br>synosharesnapshot<br>synosharesnaptool<br>synosharesnaptree<br>synosharesnaptree_reconstruct.sh<br>synosharingbackup<br>synosharingchecker<br>synosharingcron<br>synosharingurl<br>synoshortcutmigrate.min.js<br>synoshutdown<br>synosmartblock<br>synosnapschedtask.sh<br>synosnmp_communicator<br>synosnmpcd<br>synosnmpcd_db_updater<br>synosocket<br>synospace<br>synospace.sh<br>synossdbundlehotplug<br>synossdbundlemonitor<br>synosshdutils<br>synostgdisk<br>synostgpool<br>synostgreclaim<br>synostgsysraid<br>synostgtask<br>synostgvolume<br>synostorage<br>synostoragecore<br>synostoraged<br>synosubvoltype<br>synosupportchannelchecker<br>synosyncdctime<br>synosyslogcheck<br>synosyslogmail<br>synosystemctl<br>synotaskmgr<br>synotc<br>synotc_common<br>synothumb<br>synotifyd<br>synotifydutil<br>synotimecontrol<br>synotlstool<br>synotokenmgr<br>synotune<br>synoupgrade<br>synoupgradepreserve<br>synoupnp<br>synoups<br>synoups_battery_notify.sh<br>synoupscommon<br>synousb<br>synousbdisk<br>synouser<br>synouserdir<br>synouserhome<br>synovolumesnapshot<br>synovpnc<br>synovspace<br>synovspace_wrapper<br>synow3<br>synow3tool<br>synowebapi<br>synowedjat-exec<br>synowin<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>群晖</category>
      
    </categories>
    
    
    <tags>
      
      <tag>群晖</tag>
      
      <tag>DSM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Openwrt状态信息推送到HA的两种实现方法</title>
    <link href="/2023/05/28/Openwrt%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0HA%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/"/>
    <url>/2023/05/28/Openwrt%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0HA%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305272159687.png"></p><p>家里目前使用x86平台软路由作为主路由拨号，在群晖vmm虚拟机中安装了HAOS智能家居系统，HA中基于upnp的集成组件对路由器的监控项目不是很全，因此想将一些路由器的状态信息接入到HA中进行实时监控展示。这里介绍两种方法：</p><h3 id="一、通过http模式推送"><a href="#一、通过http模式推送" class="headerlink" title="一、通过http模式推送"></a>一、通过http模式推送</h3><p>1、在进入HA系统-用户-长期访问令牌-创建令牌，新建一个长期访问令牌</p><p>2、写一个shell脚本openwrt_post.sh，获取路由器的状态信息，我这里取了CPU频率、温度、使用率、内存使用率、科学上网及开机时长。脚本如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>cpu_freq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br><br>temp_cpu=$(sensors|grep °C|sed -nr &#x27;s#^Core.*:.*\+(.*)°C .*#\1#gp&#x27;|sort -nr|head -n1&#x27;&#x27;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">cpu_freq=$(<span class="hljs-built_in">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq|awk <span class="hljs-string">&#x27;&#123;print ($1)/1000&#125;&#x27;</span>)</span><br><br>function getcpu()&#123;<br><br>local AT=$(cat /proc/stat|grep &quot;^cpu &quot;|awk &#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;)<br><br>sleep 1<br><br>local BT=$(cat /proc/stat|grep &quot;^cpu &quot;|awk &#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;)<br><br>printf &quot;%.01f&quot; $(echo $&#123;AT&#125; $&#123;BT&#125;|awk &#x27;&#123;print (($4-$2)/($3-$1))*100&#125;&#x27;)<br><br>&#125;<br><br>cpu_used=$(getcpu)<br><br>mem_used=$(free -m|sed -n &#x27;2p&#x27;|awk &#x27;&#123;print&quot;&quot;($3/$2)*100&#125;&#x27;)<br><br>ssr_server=`cat /etc/config/shadowsocksr |grep global_server|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;`<br><br>up_times=$(cat /proc/uptime| awk -F. &#x27;&#123;run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf(&quot;%d天%d时%d分%d秒\n&quot;,run_days,run_hour,run_minute,run_second)&#125;&#x27;)<br><br>post_data=&quot;&#123;\&quot;state\&quot;:\&quot;$temp_cpu\&quot;, \&quot;attributes\&quot;:&#123;\&quot;temp_cpu\&quot;:\&quot;$temp_cpu\&quot;, \&quot;cpu_freq\&quot;:\&quot;$cpu_freq\&quot;, \&quot;cpu_used\&quot;:\&quot;$cpu_used\&quot;,\&quot;mem_used\&quot;:\&quot;$mem_used\&quot;,\&quot;ssr_server\&quot;:\&quot;$ssr_server\&quot;,\&quot;up_times\&quot;:\&quot;$up_times\&quot;&#125;&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$post_data</span></span><br><br>curl -X POST -H &quot;Authorization: Bearer 第一步建的长期访问令牌&quot; -H &quot;Content-Type: application/json&quot; -d &quot;$post_data&quot; http://192.168.XX.XX:8123/api/states/input_number.openwrtinfo<br></code></pre></td></tr></table></figure><p>3、通过crontab任务调度或者写一个watch脚本循环调用，即可通过post形式将采集到的信息推送到HA。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>while :<br>do<br>        if ! ps | grep -w openwrt_post.sh | grep -v grep<br>        then                                    <br>                /opt/openwrt_post.sh<br>        sleep 60#60秒取一次，可自行修改间隔<br>        fi                       <br>done<br></code></pre></td></tr></table></figure><p>4、在HA中添加配置文件，将获取到的信息转为实体</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">sensor:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">sensors:</span><br>      <span class="hljs-attr">openwrtinfo_temp_cpu:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">°C</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.temp_cpu &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_cpu_freq:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">MHz</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.cpu_freq &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_cpu_used:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&quot;%&quot;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.cpu_used &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_mem_used:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&quot;%&quot;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.mem_used &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_wan_sent:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">GB</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrtinfo_wan_sent</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.sensor.openwrt_router_b_sent.state | multiply(1/1024/1024/1024) | round(2) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_wan_received:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">GB</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrtinfo_wan_received</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.sensor.openwrt_router_b_received.state | multiply(1/1024/1024/1024) | round(2) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_ssr_server:</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.ssr_server &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_up_times:</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.up_times &#125;&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><h3 id="二、通过mqtt推送"><a href="#二、通过mqtt推送" class="headerlink" title="二、通过mqtt推送"></a>二、通过mqtt推送</h3><p>1、先在openwrt中安装好mqtt，<code>mosquitto-client-nosll、libmosquitto-nossl</code>这两个包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">opkg update<br>opkg install mosquitto-client-nossl libmosquitto-nossl<br></code></pre></td></tr></table></figure><p>2、内网已经部署了MQTT服务器。</p><p>3、监控脚本与方法一大部分相同，将最后一步的发送命令修改如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_pub -r -L mqtt://mqtt:mqtt@192.168.XX.XX:1883/openwrtinfo -m &quot;$post_data&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">mqtt:mqtt前面一个为mqtt用户名：mqtt密码</span><br></code></pre></td></tr></table></figure><p>​完整脚本如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>cpu1_freq=$(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br>cpu2_freq=$(cat /sys/devices/system/cpu/cpufreq/policy1/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br>temp_cpu=$(sensors|grep °C|sed -nr &#x27;s#^Core.*:.*\+(.*)°C .*#\1#gp&#x27;|sort -nr|head -n1&#x27;&#x27;)<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">getcpu</span></span>()&#123;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">local</span> AT=$(<span class="hljs-built_in">cat</span> /proc/stat|grep <span class="hljs-string">&quot;^cpu &quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">sleep</span> 1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">local</span> BT=$(<span class="hljs-built_in">cat</span> /proc/stat|grep <span class="hljs-string">&quot;^cpu &quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;%.01f&quot;</span> $(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;AT&#125;</span> <span class="hljs-variable">$&#123;BT&#125;</span>|awk <span class="hljs-string">&#x27;&#123;print (($4-$2)/($3-$1))*100&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">&#125;</span><br>cpu_used=$(top -b -n 1|awk &#x27;NR==2&#123;print$8&#125;&#x27;|awk &#x27;&#123;print 100-$1&#125;&#x27;)<br>mem_used=$(free -m|sed -n &#x27;2p&#x27;|awk &#x27;&#123;printf &quot;%.2f&quot;,($3/$2)*100&#125;&#x27;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ip=$(curl -s https://api.ipify.org)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">for</span>((y=<span class="hljs-number">0</span>;y&lt;<span class="hljs-variable">$&#123;#array[*]&#125;</span>;y++))</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">do</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span>&quot;</span> = <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;array[y]&#125;</span>&quot;</span> ]];<span class="hljs-keyword">then</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> ssr_server=<span class="hljs-variable">$&#123;array[y+1]&#125;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-keyword">fi</span></span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">done</span></span><br>ssr_server=$(awk &#x27;/^&#x27;$(curl -s https://api.ipify.org)&#x27;/ &#123;print $2&#125;&#x27; /opt/myscripts/ssrserver)<br>hostname=$(cat /etc/config/system |grep hostname |awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;)<br>cpu_brand=$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq)<br>cpu_arch=$(uname -m)<br>kernel=$(uname -r)<br>releases=$(echo &quot;$(cat /etc/openwrt_release |sed -n &#x27;1p&#x27;|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;) $(cat /etc/openwrt_release |sed -n &#x27;6p&#x27;|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;) $(cat /etc/openwrt_version)&quot;)<br>boot_time=$(date -d &quot;@$(( $(date +%s) - $(awk -F. &#x27;&#123;print $1&#125;&#x27; /proc/uptime) ))&quot; +&quot;%Y-%m-%d %H:%M:%S&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ssr_server=`<span class="hljs-built_in">cat</span> /etc/config/shadowsocksr |grep global_server|awk -F\<span class="hljs-string">&#x27; &#x27;</span>&#123;<span class="hljs-built_in">print</span> <span class="hljs-variable">$2</span>&#125;<span class="hljs-string">&#x27;`</span></span><br>up_times=$(cat /proc/uptime| awk -F. &#x27;&#123;run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf(&quot;%d天%d时%d分%d秒\n&quot;,run_days,run_hour,run_minute,run_second)&#125;&#x27;)<br><br>post_data=&quot;&#123;\&quot;temp_cpu\&quot;:\&quot;$temp_cpu\&quot;, \&quot;cpu1_freq\&quot;:\&quot;$cpu1_freq\&quot;,\&quot;cpu2_freq\&quot;:\&quot;$cpu2_freq\&quot;, \&quot;cpu_used\&quot;:\&quot;$cpu_used\&quot;,\&quot;mem_used\&quot;:\&quot;$mem_used\&quot;,\&quot;ssr_server\&quot;:\&quot;$ssr_server\&quot;,\&quot;up_times\&quot;:\&quot;$up_times\&quot;,\&quot;hostname\&quot;:\&quot;$hostname\&quot;, \&quot;cpu_brand\&quot;:\&quot;$cpu_brand\&quot;, \&quot;cpu_arch\&quot;:\&quot;$cpu_arch\&quot;,\&quot;kernel\&quot;:\&quot;$kernel\&quot;, \&quot;releases\&quot;:\&quot;$releases\&quot;, \&quot;boot_time\&quot;:\&quot;$boot_time\&quot;&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">echo $post_data</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">ssr_server=`cat /etc/config/shadowsocksr |grep global_server|awk -F\&#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br>mosquitto_pub -r -L mqtt://mqtt:mqtt@mqtt.local:1883/openwrtinfo -m &quot;$post_data&quot;<br></code></pre></td></tr></table></figure><p>4、在HA中增加配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mqtt:</span><br>  <span class="hljs-attr">sensor:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_tem&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_tem</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;°C&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:thermometer&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.temp_cpu &#125;&#125;</span>&#x27;</span>        <br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu1_freq&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu1_freq</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;MHz&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:pulse&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu1_freq &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu2_freq&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu2_freq</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;MHz&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:pulse&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu2_freq &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_used&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_used</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;%&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:cpu-64-bit&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_used &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_mem_used&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_mem_used</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;%&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:memory&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.mem_used &#125;&#125;</span>&#x27;</span><br>     <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">mqtt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_ssr_server&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_ssr_server</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:vpn&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.ssr_server &#125;&#125;</span>&#x27;</span><br>     <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">mqtt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_up_times&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_up_times</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:clock-time-four-outline&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.up_times &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_name&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_name</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.hostname &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_brand&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_brand</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_brand &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_arch&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_arch</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_arch &#125;&#125;</span>&#x27;</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_kernel&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_kernel</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.kernel &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_releases&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_releases</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.releases &#125;&#125;</span>&#x27;</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_boottime&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_boottime</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.boot_time &#125;&#125;</span>&#x27;</span><br><br></code></pre></td></tr></table></figure><p>5、通过crontab任务调度或者写一个watch脚本循环调用，即可通过mqtt形式将采集到的信息推送到HA。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>while :<br>do<br>        if ! ps | grep -w openwrt_mqtt.sh | grep -v grep<br>        then                                    <br>                /opt/openwrt_mqtt.sh<br>        sleep 60#60秒取一次，可自行修改间隔<br>        fi                       <br>done<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>智能家居</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openwrt</tag>
      
      <tag>HomeAssistant</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/28/hello-world/"/>
    <url>/2023/05/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
