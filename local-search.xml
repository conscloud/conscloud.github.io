<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Openwrt状态信息推送到HA的两种实现方法</title>
    <link href="/2023/05/28/Openwrt%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0HA%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/"/>
    <url>/2023/05/28/Openwrt%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E5%88%B0HA%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/conscloud/picgotemp/imgplus/202305272159687.png"></p><p>家里目前使用x86平台软路由作为主路由拨号，在群晖vmm虚拟机中安装了HAOS智能家居系统，HA中基于upnp的集成组件对路由器的监控项目不是很全，因此想将一些路由器的状态信息接入到HA中进行实时监控展示。这里介绍两种方法：</p><h3 id="一、通过http模式推送"><a href="#一、通过http模式推送" class="headerlink" title="一、通过http模式推送"></a>一、通过http模式推送</h3><p>1、在进入HA系统-用户-长期访问令牌-创建令牌，新建一个长期访问令牌</p><p>2、写一个shell脚本openwrt_post.sh，获取路由器的状态信息，我这里取了CPU频率、温度、使用率、内存使用率、科学上网及开机时长。脚本如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>cpu_freq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br><br>temp_cpu=$(sensors|grep °C|sed -nr &#x27;s#^Core.*:.*\+(.*)°C .*#\1#gp&#x27;|sort -nr|head -n1&#x27;&#x27;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">cpu_freq=$(<span class="hljs-built_in">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq|awk <span class="hljs-string">&#x27;&#123;print ($1)/1000&#125;&#x27;</span>)</span><br><br>function getcpu()&#123;<br><br>local AT=$(cat /proc/stat|grep &quot;^cpu &quot;|awk &#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;)<br><br>sleep 1<br><br>local BT=$(cat /proc/stat|grep &quot;^cpu &quot;|awk &#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;)<br><br>printf &quot;%.01f&quot; $(echo $&#123;AT&#125; $&#123;BT&#125;|awk &#x27;&#123;print (($4-$2)/($3-$1))*100&#125;&#x27;)<br><br>&#125;<br><br>cpu_used=$(getcpu)<br><br>mem_used=$(free -m|sed -n &#x27;2p&#x27;|awk &#x27;&#123;print&quot;&quot;($3/$2)*100&#125;&#x27;)<br><br>ssr_server=`cat /etc/config/shadowsocksr |grep global_server|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;`<br><br>up_times=$(cat /proc/uptime| awk -F. &#x27;&#123;run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf(&quot;%d天%d时%d分%d秒\n&quot;,run_days,run_hour,run_minute,run_second)&#125;&#x27;)<br><br>post_data=&quot;&#123;\&quot;state\&quot;:\&quot;$temp_cpu\&quot;, \&quot;attributes\&quot;:&#123;\&quot;temp_cpu\&quot;:\&quot;$temp_cpu\&quot;, \&quot;cpu_freq\&quot;:\&quot;$cpu_freq\&quot;, \&quot;cpu_used\&quot;:\&quot;$cpu_used\&quot;,\&quot;mem_used\&quot;:\&quot;$mem_used\&quot;,\&quot;ssr_server\&quot;:\&quot;$ssr_server\&quot;,\&quot;up_times\&quot;:\&quot;$up_times\&quot;&#125;&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$post_data</span></span><br><br>curl -X POST -H &quot;Authorization: Bearer 第一步建的长期访问令牌&quot; -H &quot;Content-Type: application/json&quot; -d &quot;$post_data&quot; http://192.168.XX.XX:8123/api/states/input_number.openwrtinfo<br></code></pre></td></tr></table></figure><p>3、通过crontab任务调度或者写一个watch脚本循环调用，即可通过post形式将采集到的信息推送到HA。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>while :<br>do<br>        if ! ps | grep -w openwrt_post.sh | grep -v grep<br>        then                                    <br>                /opt/openwrt_post.sh<br>        sleep 60#60秒取一次，可自行修改间隔<br>        fi                       <br>done<br></code></pre></td></tr></table></figure><p>4、在HA中添加配置文件，将获取到的信息转为实体</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">sensor:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">sensors:</span><br>      <span class="hljs-attr">openwrtinfo_temp_cpu:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">°C</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.temp_cpu &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_cpu_freq:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">MHz</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.cpu_freq &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_cpu_used:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&quot;%&quot;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.cpu_used &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_mem_used:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&quot;%&quot;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.mem_used &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_wan_sent:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">GB</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrtinfo_wan_sent</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.sensor.openwrt_router_b_sent.state | multiply(1/1024/1024/1024) | round(2) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_wan_received:</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">GB</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrtinfo_wan_received</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.sensor.openwrt_router_b_received.state | multiply(1/1024/1024/1024) | round(2) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_ssr_server:</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.ssr_server &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">openwrtinfo_up_times:</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; states.input_number.openwrtinfo.attributes.up_times &#125;&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><h3 id="二、通过mqtt推送"><a href="#二、通过mqtt推送" class="headerlink" title="二、通过mqtt推送"></a>二、通过mqtt推送</h3><p>1、先在openwrt中安装好mqtt，<code>mosquitto-client-nosll、libmosquitto-nossl</code>这两个包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">opkg update<br>opkg install mosquitto-client-nossl libmosquitto-nossl<br></code></pre></td></tr></table></figure><p>2、内网已经部署了MQTT服务器。</p><p>3、监控脚本与方法一大部分相同，将最后一步的发送命令修改如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mosquitto_pub -r -L mqtt://mqtt:mqtt@192.168.XX.XX:1883/openwrtinfo -m &quot;$post_data&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">mqtt:mqtt前面一个为mqtt用户名：mqtt密码</span><br></code></pre></td></tr></table></figure><p>​完整脚本如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>cpu1_freq=$(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br>cpu2_freq=$(cat /sys/devices/system/cpu/cpufreq/policy1/scaling_cur_freq|awk &#x27;&#123;print ($1)/1000&#125;&#x27;)<br>temp_cpu=$(sensors|grep °C|sed -nr &#x27;s#^Core.*:.*\+(.*)°C .*#\1#gp&#x27;|sort -nr|head -n1&#x27;&#x27;)<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">getcpu</span></span>()&#123;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">local</span> AT=$(<span class="hljs-built_in">cat</span> /proc/stat|grep <span class="hljs-string">&quot;^cpu &quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">sleep</span> 1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">local</span> BT=$(<span class="hljs-built_in">cat</span> /proc/stat|grep <span class="hljs-string">&quot;^cpu &quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2+$3+$4+$5+$6+$7+$8 &quot; &quot; $2+$3+$4+$7+$8&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;%.01f&quot;</span> $(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;AT&#125;</span> <span class="hljs-variable">$&#123;BT&#125;</span>|awk <span class="hljs-string">&#x27;&#123;print (($4-$2)/($3-$1))*100&#125;&#x27;</span>)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">&#125;</span><br>cpu_used=$(top -b -n 1|awk &#x27;NR==2&#123;print$8&#125;&#x27;|awk &#x27;&#123;print 100-$1&#125;&#x27;)<br>mem_used=$(free -m|sed -n &#x27;2p&#x27;|awk &#x27;&#123;printf &quot;%.2f&quot;,($3/$2)*100&#125;&#x27;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ip=$(curl -s https://api.ipify.org)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">for</span>((y=<span class="hljs-number">0</span>;y&lt;<span class="hljs-variable">$&#123;#array[*]&#125;</span>;y++))</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">do</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span>&quot;</span> = <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;array[y]&#125;</span>&quot;</span> ]];<span class="hljs-keyword">then</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> ssr_server=<span class="hljs-variable">$&#123;array[y+1]&#125;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-keyword">fi</span></span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-keyword">done</span></span><br>ssr_server=$(awk &#x27;/^&#x27;$(curl -s https://api.ipify.org)&#x27;/ &#123;print $2&#125;&#x27; /opt/myscripts/ssrserver)<br>hostname=$(cat /etc/config/system |grep hostname |awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;)<br>cpu_brand=$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq)<br>cpu_arch=$(uname -m)<br>kernel=$(uname -r)<br>releases=$(echo &quot;$(cat /etc/openwrt_release |sed -n &#x27;1p&#x27;|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;) $(cat /etc/openwrt_release |sed -n &#x27;6p&#x27;|awk -F\&#x27; &#x27;&#123;print $2&#125;&#x27;) $(cat /etc/openwrt_version)&quot;)<br>boot_time=$(date -d &quot;@$(( $(date +%s) - $(awk -F. &#x27;&#123;print $1&#125;&#x27; /proc/uptime) ))&quot; +&quot;%Y-%m-%d %H:%M:%S&quot;)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ssr_server=`<span class="hljs-built_in">cat</span> /etc/config/shadowsocksr |grep global_server|awk -F\<span class="hljs-string">&#x27; &#x27;</span>&#123;<span class="hljs-built_in">print</span> <span class="hljs-variable">$2</span>&#125;<span class="hljs-string">&#x27;`</span></span><br>up_times=$(cat /proc/uptime| awk -F. &#x27;&#123;run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf(&quot;%d天%d时%d分%d秒\n&quot;,run_days,run_hour,run_minute,run_second)&#125;&#x27;)<br><br>post_data=&quot;&#123;\&quot;temp_cpu\&quot;:\&quot;$temp_cpu\&quot;, \&quot;cpu1_freq\&quot;:\&quot;$cpu1_freq\&quot;,\&quot;cpu2_freq\&quot;:\&quot;$cpu2_freq\&quot;, \&quot;cpu_used\&quot;:\&quot;$cpu_used\&quot;,\&quot;mem_used\&quot;:\&quot;$mem_used\&quot;,\&quot;ssr_server\&quot;:\&quot;$ssr_server\&quot;,\&quot;up_times\&quot;:\&quot;$up_times\&quot;,\&quot;hostname\&quot;:\&quot;$hostname\&quot;, \&quot;cpu_brand\&quot;:\&quot;$cpu_brand\&quot;, \&quot;cpu_arch\&quot;:\&quot;$cpu_arch\&quot;,\&quot;kernel\&quot;:\&quot;$kernel\&quot;, \&quot;releases\&quot;:\&quot;$releases\&quot;, \&quot;boot_time\&quot;:\&quot;$boot_time\&quot;&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">echo $post_data</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">ssr_server=`cat /etc/config/shadowsocksr |grep global_server|awk -F\&#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br>mosquitto_pub -r -L mqtt://mqtt:mqtt@mqtt.local:1883/openwrtinfo -m &quot;$post_data&quot;<br></code></pre></td></tr></table></figure><p>4、在HA中增加配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mqtt:</span><br>  <span class="hljs-attr">sensor:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_tem&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_tem</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;°C&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:thermometer&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.temp_cpu &#125;&#125;</span>&#x27;</span>        <br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu1_freq&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu1_freq</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;MHz&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:pulse&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu1_freq &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu2_freq&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu2_freq</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;MHz&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:pulse&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu2_freq &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_used&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_used</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;%&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:cpu-64-bit&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_used &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_mem_used&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_mem_used</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">unit_of_measurement:</span> <span class="hljs-string">&#x27;%&#x27;</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:memory&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.mem_used &#125;&#125;</span>&#x27;</span><br>     <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">mqtt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_ssr_server&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_ssr_server</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:vpn&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.ssr_server &#125;&#125;</span>&#x27;</span><br>     <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">mqtt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_up_times&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_up_times</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;mdi:clock-time-four-outline&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.up_times &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_name&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_name</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.hostname &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_brand&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_brand</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_brand &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_cpu_arch&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_cpu_arch</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.cpu_arch &#125;&#125;</span>&#x27;</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_kernel&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_kernel</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.kernel &#125;&#125;</span>&#x27;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_releases&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_releases</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.releases &#125;&#125;</span>&#x27;</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;openwrt_boottime&#x27;</span><br>        <span class="hljs-attr">unique_id:</span> <span class="hljs-string">openwrt_boottime</span><br>        <span class="hljs-attr">state_topic:</span> <span class="hljs-string">&#x27;openwrtinfo&#x27;</span><br>        <span class="hljs-attr">value_template:</span> <span class="hljs-string">&#x27;<span class="hljs-template-variable">&#123;&#123; value_json.boot_time &#125;&#125;</span>&#x27;</span><br><br></code></pre></td></tr></table></figure><p>5、通过crontab任务调度或者写一个watch脚本循环调用，即可通过mqtt形式将采集到的信息推送到HA。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>while :<br>do<br>        if ! ps | grep -w openwrt_mqtt.sh | grep -v grep<br>        then                                    <br>                /opt/openwrt_mqtt.sh<br>        sleep 60#60秒取一次，可自行修改间隔<br>        fi                       <br>done<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>openwrt</tag>
      
      <tag>HomeAssistant</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/28/hello-world/"/>
    <url>/2023/05/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
